#pragma once
#include <cstdint>
class Chip8 {
private:
	uint8_t registers[16]{};
	uint8_t memory[4096]{};
	uint16_t pc{};
	uint16_t index_register{};
	uint16_t stack[16]{};
	uint8_t delay_timer{};
	uint8_t sound_timer{};
	uint8_t sp{};
	uint8_t keypad[16]{};
	uint16_t opcode;
	const static unsigned int SCREEN_WIDTH = 64;
	const static unsigned int SCREEN_HEIGHT = 32;
	uint32_t screen[SCREEN_HEIGHT * SCREEN_WIDTH]{};
	const unsigned int FONTSET_START_ADDRESS = 0x50;
	const static unsigned int FONTSET_SIZE = 80;
	const unsigned int CODE_START_ADDRESS = 0x200;

	uint8_t fontset[FONTSET_SIZE] =
	{
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
public:
	void initialize() {
		this->pc = CODE_START_ADDRESS;
		this->opcode = 0;
		this->index_register = 0;
		this->sp = 0;

		for (int i = 0; i < FONTSET_SIZE; i++) {
			memory[FONTSET_START_ADDRESS + i] = fontset[i];
		}
	}

	void cycle();

	void fetch();

	void decode_and_execute();

	void LoadROM(char const* name);
};